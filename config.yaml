---
# === ГЛАВНЫЙ КОНФИГУРАЦИОНЫЫЙ ФАЙЛ ===
paths:
  path_to_milp_files: !!str milp_problems  # путь до *.lp-, *.mps-файлов мат. постановки
  path_to_lp_files: !!str lp_problems  # путь до релаксированных *.lp-, *.mps-файлов мат. постановки
  path_to_sol_files: !!str sols  # путь до sol-файла решения задачи, если его нет, то target не будет добавляться
  path_to_output_dir: !!str output  # путь до директории результатов
  path_to_exe: !!str build\\FeatureBuilder.exe  # путь до exe-файла экстрактора признаков

features:
  varBinaryOriginal:
    # булев признак, означающий является ли переменная бинарной в исходной задаче
    use: !!bool True  # флаг использования признака
  varTypeTrans:
    # тип переменной после пресолвенга
    use: !!bool True  # флаг использования признака
  varStatus:
    use: !!bool True  # категориальный признак, статус переменной (переменная принадлежит переменная исходной задачи, 
    # свободная переменная трансформированной задачи, переменная принадлежит трансформированной задаче, переменная зафиксирована в 
    # трансформированной задаче, в трансформированной задаче переменная агрегируется в x=ay+c, переменная агрегируется в 
    # x=a_1 y_1+...+a_k y_k+c, переменная является отрицание исходной или преобразованной переменной).
  varMayRoundUp:
    # булев признак, означающий можно ли переменную округлить вверх
    use: !!bool True  # флаг использования признака
  varMayRoundDown:
    # булев признак, означающий можно ли переменную округлить вниз
    use: !!bool True  # флаг использования признака
  varIsActive:
    # булев признак, означающий является ли переменная активной (ни фиксированной, ни агрегированной) переменной
    use: !!bool True  # флаг использования признака
  varIsDeletable:
    # булев признак, означающий разрешено ли полностью удалять переменную из проблемы
    use: !!bool True  # флаг использования признака
  varIsRemovable:
    # булев признак, означающий, является ли столбец переменной удаляемым из ЛП-релаксации
    use: !!bool True  # флаг использования признака
  varObj:
    # значения коэффициентов при переменной переменных в целевой функции
    use: !!bool True  # флаг использования признака
  varPseudoSol:
    # значение переменной в псевдорешении
    use: !!bool True  # флаг использования признака
  NLocksDown:
    # количество ограничений, в которые переменная входит с отрицательным коэффициентом
    use: !!bool True  # флаг использования признака
  NLocksUp:
    # количество ограничений, в которые переменная входит с положительным коэффициентом
    use: !!bool True  # флаг использования признака
  IsTransformed:
    # булев признак, означающий принадлежит ли переменная трансформированной задаче
    use: !!bool True  # флаг использования признака
  multaggrConstant:
    # multaggr_constant – константа c из мультиагрегированной переменной x=a_0 y_0+...+a_(n-1) y_(n-1)+c
    use: !!bool True  # флаг использования признака
  varAggrScalar:
    # скаляр агрегации a агрегированной переменной x=ay+c
    use: !!bool True  # флаг использования признака
  varAggrConstant:
    # константа c из агрегированной переменной x=ay+c
    use: !!bool True  # флаг использования признака
  varMultaggrNVars: 
    # число n агрегированных переменных в мультиагрегированной переменной x=a_0 y_0+...+a_(n-1) y_(n-1)+c
    use: !!bool True  # флаг использования признака
  varBestBound: 
    # наилучшая глобальная оценка переменной по отношению к целевой функции
    use: !!bool True  # флаг использования признака
  varWorstBound:
    # наихудшая глобальная оценка переменной по отношению к целевой функции
    use: !!bool True  # флаг использования признака
  varBranchFactor:
    # коэффициент ветвления переменной; это значение может быть использовано в методах ветвления для масштабирования значений 
    # баллов переменных; более высокий коэффициент приводит к более высокой вероятности того, что эта переменная выбрана для ветвления
    use: !!bool True  # флаг использования признака
  varBranchPriority:
    # приоритет ветвления переменной; переменным с более высоким приоритетом всегда следует отдавать предпочтение перед переменными 
    # с более низким приоритетом
    use: !!bool True  # флаг использования признака
  varBranchDirection:
    # предпочтительное направление ветвления переменной
    use: !!bool True  # флаг использования признака
  varNImpls0:
    # количество импликаций для x=0 заданной активной переменной
    use: !!bool True  # флаг использования признака
  varNImpls1:
    # количество импликаций для x=1 заданной активной переменной
    use: !!bool True  # флаг использования признака
  varGetNCliques0:
    # количество клик, в которых содержится переменная x=0
    use: !!bool True  # флаг использования признака
  varGetNCliques1:
    # количество клик, в которых содержится переменная x=1
    use: !!bool True  # флаг использования признака
  varConflictScore: 
    # значение оценки конфликта переменной
    use: !!bool True  # флаг использования признака
  varAvgInferenceScore:
    # среднее значение оценки вывода переменной
    use: !!bool True  # флаг использования признака
  relaxSolVal:
    # значение переменной в релаксированном решении
    use: !!bool True  # флаг использования признака
  varImplRedcost0:
    # имплицитные уменьшенные затраты на переменную в ЛП-релаксации текущего узла для 
    # x=0, текущий узел (в данном случае корневой) должен иметь допустимый LP
    use: !!bool True  # флаг использования признака
  varImplRedcost1:
    # имплицитные уменьшенные затраты на переменную в ЛП-релаксации текущего узла для 
    # x=1, текущий узел (в данном случае корневой) должен иметь допустимый LP.
    use: !!bool True  # флаг использования признака
  varPseudocostScore:
    # значение псевдозатратной оценки переменной для заданного значения решения
    use: !!bool True  # флаг использования признака
  equalToLb:
    # булев признак, означающий, равна ли переменная верхней границе в релаксированном значении
    use: !!bool True  # флаг использования признака
  equalToUb:
    # булев признак, означающий, равна ли переменная нижней границе в релаксированном значении
    use: !!bool True  # флаг использования признака
